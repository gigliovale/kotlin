FILE /companionObject.kt
  CLASS CLASS Test1
    $new: VALUE_PARAMETER <receiver: Test1>
    CONSTRUCTOR public constructor Test1()
      BLOCK_BODY
        DELEGATING_CONSTRUCTOR_CALL 'constructor Any()'
        INSTANCE_INITIALIZER_CALL classDescriptor='Test1'
    CLASS OBJECT companion object of Test1
      $new: VALUE_PARAMETER <receiver: companion object of Test1>
      CONSTRUCTOR private constructor Companion()
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL 'constructor Any()'
          INSTANCE_INITIALIZER_CALL classDescriptor='companion object of Test1'
      FUN FAKE_OVERRIDE public open override fun equals(other: kotlin.Any?): kotlin.Boolean
      FUN FAKE_OVERRIDE public open override fun hashCode(): kotlin.Int
      FUN FAKE_OVERRIDE public open override fun toString(): kotlin.String
    FUN FAKE_OVERRIDE public open override fun equals(other: kotlin.Any?): kotlin.Boolean
    FUN FAKE_OVERRIDE public open override fun hashCode(): kotlin.Int
    FUN FAKE_OVERRIDE public open override fun toString(): kotlin.String
  CLASS CLASS Test2
    $new: VALUE_PARAMETER <receiver: Test2>
    CONSTRUCTOR public constructor Test2()
      BLOCK_BODY
        DELEGATING_CONSTRUCTOR_CALL 'constructor Any()'
        INSTANCE_INITIALIZER_CALL classDescriptor='Test2'
    CLASS OBJECT companion object of Test2Named
      $new: VALUE_PARAMETER <receiver: companion object of Test2Named>
      CONSTRUCTOR private constructor Named()
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL 'constructor Any()'
          INSTANCE_INITIALIZER_CALL classDescriptor='companion object of Test2Named'
      FUN FAKE_OVERRIDE public open override fun equals(other: kotlin.Any?): kotlin.Boolean
      FUN FAKE_OVERRIDE public open override fun hashCode(): kotlin.Int
      FUN FAKE_OVERRIDE public open override fun toString(): kotlin.String
    FUN FAKE_OVERRIDE public open override fun equals(other: kotlin.Any?): kotlin.Boolean
    FUN FAKE_OVERRIDE public open override fun hashCode(): kotlin.Int
    FUN FAKE_OVERRIDE public open override fun toString(): kotlin.String
