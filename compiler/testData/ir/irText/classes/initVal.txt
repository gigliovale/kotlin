FILE /initVal.kt
  CLASS CLASS TestInitValFromParameter
    CONSTRUCTOR public constructor TestInitValFromParameter(x: kotlin.Int)
      VALUE_PARAMETER value-parameter x: kotlin.Int
      BLOCK_BODY
        DELEGATING_CONSTRUCTOR_CALL 'constructor Any()'
        INSTANCE_INITIALIZER_CALL classDescriptor='TestInitValFromParameter'
    PROPERTY public final val x: kotlin.Int
      FIELD PROPERTY_BACKING_FIELD public final val x: kotlin.Int
        EXPRESSION_BODY
          GET_VAR 'value-parameter x: Int' type=kotlin.Int origin=INITIALIZE_PROPERTY_FROM_PARAMETER
      FUN DEFAULT_PROPERTY_ACCESSOR public final fun <get-x>(): kotlin.Int
        $this: VALUE_PARAMETER <receiver: TestInitValFromParameter>
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='<get-x>(): Int'
            GET_FIELD 'x: Int' type=kotlin.Int origin=null
              receiver: GET_VAR '<receiver: TestInitValFromParameter>' type=TestInitValFromParameter origin=null
    FUN FAKE_OVERRIDE public open override fun equals(other: kotlin.Any?): kotlin.Boolean
    FUN FAKE_OVERRIDE public open override fun hashCode(): kotlin.Int
    FUN FAKE_OVERRIDE public open override fun toString(): kotlin.String
  CLASS CLASS TestInitValInClass
    CONSTRUCTOR public constructor TestInitValInClass()
      BLOCK_BODY
        DELEGATING_CONSTRUCTOR_CALL 'constructor Any()'
        INSTANCE_INITIALIZER_CALL classDescriptor='TestInitValInClass'
    PROPERTY public final val x: kotlin.Int = 0
      FIELD PROPERTY_BACKING_FIELD public final val x: kotlin.Int = 0
        EXPRESSION_BODY
          CONST Int type=kotlin.Int value='0'
      FUN DEFAULT_PROPERTY_ACCESSOR public final fun <get-x>(): kotlin.Int
        $this: VALUE_PARAMETER <receiver: TestInitValInClass>
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='<get-x>(): Int'
            GET_FIELD 'x: Int' type=kotlin.Int origin=null
              receiver: GET_VAR '<receiver: TestInitValInClass>' type=TestInitValInClass origin=null
    FUN FAKE_OVERRIDE public open override fun equals(other: kotlin.Any?): kotlin.Boolean
    FUN FAKE_OVERRIDE public open override fun hashCode(): kotlin.Int
    FUN FAKE_OVERRIDE public open override fun toString(): kotlin.String
  CLASS CLASS TestInitValInInitBlock
    CONSTRUCTOR public constructor TestInitValInInitBlock()
      BLOCK_BODY
        DELEGATING_CONSTRUCTOR_CALL 'constructor Any()'
        INSTANCE_INITIALIZER_CALL classDescriptor='TestInitValInInitBlock'
    PROPERTY public final val x: kotlin.Int
      FIELD PROPERTY_BACKING_FIELD public final val x: kotlin.Int
      FUN DEFAULT_PROPERTY_ACCESSOR public final fun <get-x>(): kotlin.Int
        $this: VALUE_PARAMETER <receiver: TestInitValInInitBlock>
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='<get-x>(): Int'
            GET_FIELD 'x: Int' type=kotlin.Int origin=null
              receiver: GET_VAR '<receiver: TestInitValInInitBlock>' type=TestInitValInInitBlock origin=null
    ANONYMOUS_INITIALIZER TestInitValInInitBlock
      BLOCK_BODY
        SET_FIELD 'x: Int' type=kotlin.Unit origin=null
          receiver: GET_VAR '<receiver: TestInitValInInitBlock>' type=TestInitValInInitBlock origin=null
          value: CONST Int type=kotlin.Int value='0'
    FUN FAKE_OVERRIDE public open override fun equals(other: kotlin.Any?): kotlin.Boolean
    FUN FAKE_OVERRIDE public open override fun hashCode(): kotlin.Int
    FUN FAKE_OVERRIDE public open override fun toString(): kotlin.String
