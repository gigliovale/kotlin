FILE /memberExtension.kt
  CLASS OBJECT Host
    CONSTRUCTOR private constructor Host()
      BLOCK_BODY
        DELEGATING_CONSTRUCTOR_CALL 'constructor Any()'
        INSTANCE_INITIALIZER_CALL classDescriptor='Host'
    CLASS CLASS StringDelegate
      CONSTRUCTOR public constructor StringDelegate(s: kotlin.String)
        VALUE_PARAMETER value-parameter s: kotlin.String
        BLOCK_BODY
          DELEGATING_CONSTRUCTOR_CALL 'constructor Any()'
          INSTANCE_INITIALIZER_CALL classDescriptor='StringDelegate'
      PROPERTY public final val s: kotlin.String
        FIELD PROPERTY_BACKING_FIELD public final val s: kotlin.String
          EXPRESSION_BODY
            GET_VAR 'value-parameter s: String' type=kotlin.String origin=INITIALIZE_PROPERTY_FROM_PARAMETER
        FUN DEFAULT_PROPERTY_ACCESSOR public final fun <get-s>(): kotlin.String
          $this: VALUE_PARAMETER <receiver: StringDelegate>
          BLOCK_BODY
            RETURN type=kotlin.Nothing from='<get-s>(): String'
              GET_FIELD 's: String' type=kotlin.String origin=null
                receiver: GET_VAR '<receiver: StringDelegate>' type=Host.StringDelegate origin=null
      FUN public final operator fun getValue(receiver: kotlin.String, p: kotlin.Any): kotlin.String
        $this: VALUE_PARAMETER <receiver: StringDelegate>
        VALUE_PARAMETER value-parameter receiver: kotlin.String
        VALUE_PARAMETER value-parameter p: kotlin.Any
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='getValue(String, Any): String'
            CALL 'plus(Any?): String' type=kotlin.String origin=PLUS
              $this: GET_VAR 'value-parameter receiver: String' type=kotlin.String origin=null
              other: CALL '<get-s>(): String' type=kotlin.String origin=GET_PROPERTY
                $this: GET_VAR '<receiver: StringDelegate>' type=Host.StringDelegate origin=null
      FUN FAKE_OVERRIDE public open override fun equals(other: kotlin.Any?): kotlin.Boolean
      FUN FAKE_OVERRIDE public open override fun hashCode(): kotlin.Int
      FUN FAKE_OVERRIDE public open override fun toString(): kotlin.String
    FUN public final operator fun kotlin.String.provideDelegate(host: kotlin.Any?, p: kotlin.Any): Host.StringDelegate
      $this: VALUE_PARAMETER <receiver: Host>
      $receiver: VALUE_PARAMETER <receiver: provideDelegate(Any?, Any) on String: Host.StringDelegate>
      VALUE_PARAMETER value-parameter host: kotlin.Any?
      VALUE_PARAMETER value-parameter p: kotlin.Any
      BLOCK_BODY
        RETURN type=kotlin.Nothing from='provideDelegate(Any?, Any) on String: Host.StringDelegate'
          CALL 'constructor StringDelegate(String)' type=Host.StringDelegate origin=null
            s: GET_VAR '<receiver: provideDelegate(Any?, Any) on String: Host.StringDelegate>' type=kotlin.String origin=null
    PROPERTY public final val kotlin.String.plusK: kotlin.String
      FIELD DELEGATE val `plusK$delegate`: Host.StringDelegate
        EXPRESSION_BODY
          CALL 'provideDelegate(Any?, Any) on String: Host.StringDelegate' type=Host.StringDelegate origin=null
            $this: GET_VAR '<receiver: Host>' type=Host origin=null
            $receiver: CONST String type=kotlin.String value='K'
            host: GET_VAR '<receiver: Host>' type=Host origin=null
            p: CALLABLE_REFERENCE 'plusK: String on String' type=kotlin.reflect.KProperty2<kotlin.String, Host, kotlin.String> origin=PROPERTY_REFERENCE_FOR_DELEGATE
      FUN DELEGATED_PROPERTY_ACCESSOR public final fun kotlin.String.<get-plusK>(): kotlin.String
        $this: VALUE_PARAMETER <receiver: Host>
        $receiver: VALUE_PARAMETER <receiver: plusK: String on String>
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='<get-plusK>() on String: String'
            CALL 'getValue(String, Any): String' type=kotlin.String origin=null
              $this: GET_FIELD '`plusK$delegate`: Host.StringDelegate' type=Host.StringDelegate origin=null
                receiver: GET_VAR '<receiver: Host>' type=Host origin=null
              receiver: GET_VAR '<receiver: plusK: String on String>' type=kotlin.String origin=null
              p: CALLABLE_REFERENCE 'plusK: String on String' type=kotlin.reflect.KProperty2<kotlin.String, Host, kotlin.String> origin=PROPERTY_REFERENCE_FOR_DELEGATE
    PROPERTY public final val ok: kotlin.String
      FIELD PROPERTY_BACKING_FIELD public final val ok: kotlin.String
        EXPRESSION_BODY
          CALL '<get-plusK>() on String: String' type=kotlin.String origin=GET_PROPERTY
            $this: GET_VAR '<receiver: Host>' type=Host origin=null
            $receiver: CONST String type=kotlin.String value='O'
      FUN DEFAULT_PROPERTY_ACCESSOR public final fun <get-ok>(): kotlin.String
        $this: VALUE_PARAMETER <receiver: Host>
        BLOCK_BODY
          RETURN type=kotlin.Nothing from='<get-ok>(): String'
            GET_FIELD 'ok: String' type=kotlin.String origin=null
              receiver: GET_VAR '<receiver: Host>' type=Host origin=null
    FUN FAKE_OVERRIDE public open override fun equals(other: kotlin.Any?): kotlin.Boolean
    FUN FAKE_OVERRIDE public open override fun hashCode(): kotlin.Int
    FUN FAKE_OVERRIDE public open override fun toString(): kotlin.String
